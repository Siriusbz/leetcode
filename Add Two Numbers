/*add two numbers(C++)*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 //Solution1:append zeros
class Solution {
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {  //l1和l2都定义为链表节点指针
        //1.initalize the length of l1 and l2
        int len1 = 1;
        int len2 = 1;
        ListNode* p = l1;
        ListNode* q = l2;
        //2.record the length of l1 and l2
        while(p->next!=nullptr){
            len1 += 1;
            p = p->next;
        }
        while(q->next!=nullptr){
            len2 += 1;
            q = q->next;
        }
        //3.compare the  length of l1 and l2,and add zeros for the short link
        if (len1<len2){
            for(int i=1;i<=len2-len1;i++){
                p->next = new ListNode(0);
                p = p->next;
            }
        }
        else{
            for(int i=1;i<=len1-len2;i++){
                q->next = new ListNode(0);
                q = q->next;
            }
        }
        p = l1;
        q = l2;
        //4.calculate the sum
        bool count = false;  //record the carry
        int s = 0;  //record the sum
        ListNode* l3 = new ListNode(-1); 
        ListNode* w = l3;
        while(p!=nullptr&&q!=nullptr){
            s = count + p->val + q->val;
            w->next = new ListNode(s % 10);
            count = s >= 10 ? true: false;
            w = w->next;
            p = p->next;
            q = q->next;
        }
        if (count){
            w->next = new ListNode(1);
            w = w->next;
        }
        return l3->next;
    }
};
